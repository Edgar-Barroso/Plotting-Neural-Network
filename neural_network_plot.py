# -*- coding: utf-8 -*-
"""neural_network_plot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hrKCwbr7ZuBInOz6j2s9GfS8fSOBgmGJ
"""

def criar_layer(n_neuronios,x):
  limite = round(400 + (n_neuronios * 10))
  if limite %2!=0:
    limite+=1
  x = np.ones((n_neuronios,))*x
  if n_neuronios > 2:
    y = np.linspace(-limite,limite,n_neuronios)
  elif n_neuronios == 2:
    y = np.array([-100,100])
  else:
    y = np.array([0])
  return x,y

def ligar_neuronios(coords,neural_size):
  for n,coord in enumerate(coords):
    if n%2==0:
      try:
        x1 = coords[n]
        y1 = coords[n+1]
        x2 = coords[n+2]
        y2 = coords[n+3]
        color = ["#"+''.join([random.choice('0123456789ABCDEF') for j in range(6)])]
        for c in range(len(x1)):
          for n2 in range(len(x2)):
            plt.plot([x1[c],x2[n2]],[y1[c],y2[n2]],linewidth=1,c='grey',marker='o',markersize=neural_size,markerfacecolor=color[0],markeredgecolor='red')
      except:
        pass
def plot_neural(camadas,figsize=(10, 8),neural_size=20):
  import matplotlib.pyplot as plt
  import numpy as np
  import random
  plt.figure(figsize=figsize, dpi=80)
  plt.xticks([])
  plt.yticks([])
  ligacoes = []
  for n,camada in enumerate(camadas):
    x1,y1 = criar_layer(camada,n+1)
    ligacoes.append(x1)
    ligacoes.append(y1)
  ligar_neuronios(ligacoes,neural_size)

#plot_neural([2,8,16,8,1],figsize=(20,12),neural_size=30)